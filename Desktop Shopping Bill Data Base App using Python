from tkinter import *
import time,datetime
import random
import sqlite3
from tkinter import messagebox
from notify_run import Notify

class Bill_App:
    def __init__(self, root):
        self.root = root
        self.root.geometry("1300x700+0+0")
        self.root.maxsize(width=1280, height=700)
        self.root.minsize(width=1280, height=700)

        self.root.title("MSD Retail Billing")

        # ====================Variables========================#

        self.DateofOrder = StringVar()
        self.cus_name = StringVar()
        self.c_phone = StringVar()
        # For Generating Random Bill Numbers
        ###################################################################
        lst = []
        con = sqlite3.connect("Grocery_aalll.db")
        cursor = con.cursor()
        emp_query = "Select * from Grocery_aalll"
        cursor.execute(emp_query)
        result = cursor.fetchall()
        for row in result:
                lst.append(row[2])
                # f'{row[2]}'.join(lst)
        lst.reverse()
        x = int(lst[0])+1
        ###################################################################

        self.c_bill_no = StringVar()
        # Seting Value to variable
        self.c_bill_no.set(str(x))

        self.bath_soap = IntVar()
        self.face_cream = IntVar()
        self.face_wash = IntVar()
        self.hair_spray = IntVar()
        self.body_lotion = IntVar()
        self.rice = IntVar()
        self.daal = IntVar()
        self.food_oil = IntVar()
        self.wheat = IntVar()
        self.sugar = IntVar()
        self.maaza = IntVar()
        self.coke = IntVar()
        self.sprite = IntVar()
        self.oats = IntVar()
        self.biscuits = IntVar()
        self.total_cosmetics = StringVar()
        self.total_grocery = StringVar()
        self.total_other = StringVar()
        self.tax_cos = StringVar()
        self.tax_groc = StringVar()
        self.tax_other = StringVar()

        # ===================================
        bg_color = "#074463"
        fg_color = "white"
        lbl_color = 'white'
        # Title of App
        title = Label(self.root, text="MSD Shopping Bill", bd=12, relief=GROOVE, fg=fg_color, bg=bg_color,
                      font=("times new roman", 30, "bold"))
        title.place(x=0,y=10)

        # ==========Customers Frame==========#
        F1 = LabelFrame(text="Customer Details", font=("time new roman", 12, "bold"), fg="gold", bg=bg_color,
                        relief=GROOVE, bd=10)
        F1.place(x=0, y=80, relwidth=1)

        # ===============Customer Name===========#
        cname_lbl = Label(F1, text="Customer Name", bg=bg_color, fg=fg_color,
                          font=("times new roman", 15, "bold")).grid(row=0, column=0, padx=10, pady=5)
        cname_en = Entry(F1, bd=8, relief=GROOVE, textvariable=self.cus_name)
        cname_en.grid(row=0, column=1, ipady=4, ipadx=30, pady=5)

        # =================Customer Phone==============#
        cphon_lbl = Label(F1, text="Phone No", bg=bg_color, fg=fg_color, font=("times new roman", 15, "bold")).grid(
            row=0, column=2, padx=20)
        cphon_en = Entry(F1, bd=8, relief=GROOVE, textvariable=self.c_phone)
        cphon_en.grid(row=0, column=3, ipady=4, ipadx=30, pady=5)

        # ====================Customer Bill No==================#
        cbill_lbl = Label(F1, text="Bill No.", bg=bg_color, fg=fg_color, font=("times new roman", 15, "bold"))
        cbill_lbl.grid(row=0, column=4, padx=20)
        cbill_en = Entry(F1, bd=8, relief=GROOVE, textvariable=self.c_bill_no)
        cbill_en.grid(row=0, column=5, ipadx=30, ipady=4, pady=5)

        #======================= Setting Time =====================#
        def tick():
            d = datetime.datetime.now()
            today = '{:%B %d, %Y}'.format(d)
            mytime = time.strftime('%I:%M:%S %p')
            self.lblinfo.config(text=(mytime+'\t'+today))
            self.lblinfo.after(1, tick)

        self.lblinfo = Label(self.root, bg=fg_color, fg=bg_color, bd = 12, relief=GROOVE,font=('times new roman', 17, 'bold'))
        self.lblinfo.place(x=920, y=23)
        tick()
        ######################### Company LookS ############################
        bill_btn = Button(F1,text="MSD", bd=7, relief=GROOVE, font=("times new roman", 12, "bold"), bg=bg_color,
                          fg=fg_color)
        bill_btn.grid(row=0, column=6, ipady=5, padx=60, ipadx=19, pady=5)

#####################################################################################################################################
        # ==================Cosmetics Frame=====================#
        F2 = LabelFrame(self.root, text='Cosmetics', bd=10, relief=GROOVE, bg=bg_color, fg="gold",
                        font=("times new roman", 13, "bold"))
        F2.place(x=5, y=180, width=325, height=380)

        # ===========Frame Content
        bath_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Bath Soap")
        bath_lbl.grid(row=0, column=0, padx=10, pady=20)
        bath_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.bath_soap)
        bath_en.grid(row=0, column=1, ipady=5, ipadx=5)

        # =======Face Cream
        face_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Face Cream")
        face_lbl.grid(row=1, column=0, padx=10, pady=20)
        face_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.face_cream)
        face_en.grid(row=1, column=1, ipady=5, ipadx=5)

        # ========Face Wash
        wash_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Face Wash")
        wash_lbl.grid(row=2, column=0, padx=10, pady=20)
        wash_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.face_wash)
        wash_en.grid(row=2, column=1, ipady=5, ipadx=5)

        # ========Hair Spray
        hair_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Body Spray")
        hair_lbl.grid(row=3, column=0, padx=10, pady=20)
        hair_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.hair_spray)
        hair_en.grid(row=3, column=1, ipady=5, ipadx=5)

        # ============Body Lotion
        lot_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Body Lotion")
        lot_lbl.grid(row=4, column=0, padx=10, pady=20)
        lot_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.body_lotion)
        lot_en.grid(row=4, column=1, ipady=5, ipadx=5)

        # ==================Grocery Frame=====================#
        F2 = LabelFrame(self.root, text='Grocery', bd=10, relief=GROOVE, bg=bg_color, fg="gold",
                        font=("times new roman", 13, "bold"))
        F2.place(x=330, y=180, width=325, height=380)

        # ===========Frame Content
        rice_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Rice")
        rice_lbl.grid(row=0, column=0, padx=10, pady=20)
        rice_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.rice)
        rice_en.grid(row=0, column=1, ipady=5, ipadx=5)

        # =======
        oil_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Food Oil")
        oil_lbl.grid(row=1, column=0, padx=10, pady=20)
        oil_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.food_oil)
        oil_en.grid(row=1, column=1, ipady=5, ipadx=5)

        # =======
        daal_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Dal")
        daal_lbl.grid(row=2, column=0, padx=10, pady=20)
        daal_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.daal)
        daal_en.grid(row=2, column=1, ipady=5, ipadx=5)

        # ========
        wheat_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Wheat")
        wheat_lbl.grid(row=3, column=0, padx=10, pady=20)
        wheat_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.wheat)
        wheat_en.grid(row=3, column=1, ipady=5, ipadx=5)

        # ============
        sugar_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Sugar")
        sugar_lbl.grid(row=4, column=0, padx=10, pady=20)
        sugar_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.sugar)
        sugar_en.grid(row=4, column=1, ipady=5, ipadx=5)


        # ==================Other Stuff=====================#

        F2 = LabelFrame(self.root, text='Others', bd=10, relief=GROOVE, bg=bg_color, fg="gold",
                        font=("times new roman", 13, "bold"))
        F2.place(x=655, y=180, width=325, height=380)

        # ===========Frame Content
        maaza_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Maaza")
        maaza_lbl.grid(row=0, column=0, padx=10, pady=20)
        maaza_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.maaza)
        maaza_en.grid(row=0, column=1, ipady=5, ipadx=5)

        # =======
        cock_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Coke")
        cock_lbl.grid(row=1, column=0, padx=10, pady=20)
        cock_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.coke)
        cock_en.grid(row=1, column=1, ipady=5, ipadx=5)

        # =======
        sprite_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Sprite")
        sprite_lbl.grid(row=2, column=0, padx=10, pady=20)
        sprite_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.sprite)
        sprite_en.grid(row=2, column=1, ipady=5, ipadx=5)

        # ========
        oats_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Oats")
        oats_lbl.grid(row=3, column=0, padx=10, pady=20)
        oats_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.oats)
        oats_en.grid(row=3, column=1, ipady=5, ipadx=5)

        # ============
        bis_lbl = Label(F2, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Biscuits")
        bis_lbl.grid(row=4, column=0, padx=10, pady=20)
        bis_en = Entry(F2, bd=8, relief=GROOVE, textvariable=self.biscuits)
        bis_en.grid(row=4, column=1, ipady=5, ipadx=5)

        # ===================Bill Aera================#
        F3 = Label(self.root, bd=10, relief=GROOVE)
        F3.place(x=960, y=180, width=325, height=380)
        # ===========
        bill_title = Label(F3, text="Bill Area", font=("Lucida", 13, "bold"), bd=7, relief=GROOVE)
        bill_title.pack(fill=X)

        # ============
        scroll_y = Scrollbar(F3, orient=VERTICAL)
        self.txt = Text(F3, yscrollcommand=scroll_y.set)
        scroll_y.pack(side=RIGHT, fill=Y)
        scroll_y.config(command=self.txt.yview)
        self.txt.pack(fill=BOTH, expand=1)

        # ===========Buttons Frame=============#
        F4 = LabelFrame(self.root, text='Bill Menu', bd=10, relief=GROOVE, bg=bg_color, fg="gold",
                        font=("times new roman", 13, "bold"))
        F4.place(x=0, y=560, relwidth=1, height=145)

        # ===================
        cosm_lbl = Label(F4, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Total Cosmetics")
        cosm_lbl.grid(row=0, column=0, padx=10, pady=0)
        cosm_en = Entry(F4, bd=8, relief=GROOVE, textvariable=self.total_cosmetics)
        cosm_en.grid(row=0, column=1, ipady=2, ipadx=5)

        # ===================
        gro_lbl = Label(F4, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Total Grocery")
        gro_lbl.grid(row=1, column=0, padx=10, pady=5)
        gro_en = Entry(F4, bd=8, relief=GROOVE, textvariable=self.total_grocery)
        gro_en.grid(row=1, column=1, ipady=2, ipadx=5)

        # ================
        oth_lbl = Label(F4, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Others Total")
        oth_lbl.grid(row=2, column=0, padx=10, pady=5)
        oth_en = Entry(F4, bd=8, relief=GROOVE, textvariable=self.total_other)
        oth_en.grid(row=2, column=1, ipady=2, ipadx=5)

        # ================
        cosmt_lbl = Label(F4, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Cosmetics Tax")
        cosmt_lbl.grid(row=0, column=2, padx=30, pady=0)
        cosmt_en = Entry(F4, bd=8, relief=GROOVE, textvariable=self.tax_cos)
        cosmt_en.grid(row=0, column=3, ipady=2, ipadx=5)

        # =================
        grot_lbl = Label(F4, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Grocery Tax")
        grot_lbl.grid(row=1, column=2, padx=30, pady=5)
        grot_en = Entry(F4, bd=8, relief=GROOVE, textvariable=self.tax_groc)
        grot_en.grid(row=1, column=3, ipady=2, ipadx=5)

        # ==================
        otht_lbl = Label(F4, font=("times new roman", 15, "bold"), fg=lbl_color, bg=bg_color, text="Others Tax")
        otht_lbl.grid(row=2, column=2, padx=10, pady=5)
        otht_en = Entry(F4, bd=8, relief=GROOVE, textvariable=self.tax_other)
        otht_en.grid(row=2, column=3, ipady=2, ipadx=5)

        # ====================
        total_btn = Button(F4, text="Total", bg=bg_color, fg=fg_color, font=("lucida", 12, "bold"), bd=7, relief=GROOVE,
                           command=self.total)
        total_btn.grid(row=1, column=4, ipadx=20, padx=30)

        # ========================
        genbill_btn = Button(F4, text="Generate Bill", bg=bg_color, fg=fg_color, font=("lucida", 12, "bold"), bd=7,
                             relief=GROOVE, command=self.bill_area)
        genbill_btn.grid(row=1, column=5, ipadx=20)

        # ====================
        clear_btn = Button(F4, text="Clear", bg=bg_color, fg=fg_color, font=("lucida", 12, "bold"), bd=7, relief=GROOVE,
                           command=self.clear)
        clear_btn.grid(row=1, column=6, ipadx=20, padx=30)

        # ======================
        exit_btn = Button(F4, text="Exit", bg=bg_color, fg=fg_color, font=("lucida", 12, "bold"), bd=7, relief=GROOVE,
                          command=self.exit)
        exit_btn.grid(row=1, column=7, ipadx=20)

    # Function to get total prices
    def total(self):
        # =================Total Cosmetics Prices
        self.total_cosmetics_prices = (
                (self.bath_soap.get() * 40) +
                (self.face_cream.get() * 140) +
                (self.face_wash.get() * 240) +
                (self.hair_spray.get() * 340) +
                (self.body_lotion.get() * 260)
        )
        self.total_cosmetics.set("Rs. " + str(self.total_cosmetics_prices))
        self.tax_cos.set("Rs. " + str(round(self.total_cosmetics_prices * 0.05)))
        # ====================Total Grocery Prices
        self.total_grocery_prices = (
                (self.wheat.get() * 100) +
                (self.food_oil.get() * 180) +
                (self.daal.get() * 80) +
                (self.rice.get() * 80) +
                (self.sugar.get() * 170)

        )
        self.total_grocery.set("Rs. " + str(self.total_grocery_prices))
        self.tax_groc.set("Rs. " + str(round(self.total_grocery_prices * 0.05)))
        # ======================Total Other Prices
        self.total_other_prices = (
                (self.maaza.get() * 20) +
                (self.sprite.get() * 50) +
                (self.coke.get() * 60) +
                (self.oats.get() * 20) +
                (self.biscuits.get() * 20)
        )
        self.total_other.set("Rs. " + str(self.total_other_prices))
        self.tax_other.set("Rs. " + str(round(self.total_other_prices * 0.05)))

    # Function For Text Area
    def welcome_soft(self):
        self.DateofOrder.set(time.strftime("%d/%m/%y %H:%M:%S"))
        self.txt.delete('1.0', END)
        self.txt.insert(END, "       Welcome To MSD's Retail\n")
        self.txt.insert(END,f"Date Of Bill: {self.DateofOrder.get()}")
        self.txt.insert(END, f"\nBill No. : {str(self.c_bill_no.get())}")
        self.txt.insert(END, f"\nCustomer Name : {str(self.cus_name.get())}")
        self.txt.insert(END, f"\nPhone No. : {str(self.c_phone.get())}")
        self.txt.insert(END, "\n===================================")
        self.txt.insert(END, "\nProduct          Qty         Price")
        self.txt.insert(END, "\n===================================")

    # Function to clear the bill area
    def clear(self):
        self.txt.delete('1.0', END)

        self.cus_name.set("")
        self.c_phone.set("")
        ######################################
        lst = []
        con = sqlite3.connect("Grocery_aalll.db")
        cursor = con.cursor()
        emp_query = "Select * from Grocery_aalll"
        cursor.execute(emp_query)
        result = cursor.fetchall()
        for row in result:
            lst.append(row[2])
            # f'{row[2]}'.join(lst)
        lst.reverse()

        ######################################
        #x = str(lst[0]+1)
        x=int(lst[0])+1

        self.c_bill_no.set(str(x))

        self.total_cosmetics.set("")
        self.total_grocery.set("")
        self.total_other.set("")

        self.tax_cos.set("")
        self.tax_groc.set("")
        self.tax_other.set("")

        self.bath_soap.set("0")
        self.face_cream.set("0")
        self.face_wash.set("0")
        self.hair_spray.set("0")
        self.body_lotion.set("0")

        self.rice.set("0")
        self.food_oil.set("0")
        self.daal.set("0")
        self.wheat.set("0")
        self.sugar.set("0")

        self.maaza.set("0")
        self.coke.set("0")
        self.sprite.set("0")
        self.oats.set("0")
        self.biscuits.set("0")

    # Add Product name , qty and price to bill area
    def bill_area(self):
        self.welcome_soft()
        if self.bath_soap.get() != 0:
            self.txt.insert(END, f"\nBath Soap         {self.bath_soap.get()}           {self.bath_soap.get() * 40}")
        if self.face_cream.get() != 0:
            self.txt.insert(END, f"\nFace Cream        {self.face_cream.get()}           {self.face_cream.get() * 140}")
        if self.face_wash.get() != 0:
            self.txt.insert(END, f"\nFace Wash         {self.face_wash.get()}           {self.face_wash.get() * 240}")
        if self.hair_spray.get() != 0:
            self.txt.insert(END, f"\nHair Spray        {self.hair_spray.get()}           {self.hair_spray.get() * 340}")
        if self.body_lotion.get() != 0:
            self.txt.insert(END,
                            f"\nBody Lotion       {self.body_lotion.get()}           {self.body_lotion.get() * 260}")
        if self.wheat.get() != 0:
            self.txt.insert(END, f"\nWheat             {self.wheat.get()}           {self.wheat.get() * 100}")
        if self.food_oil.get() != 0:
            self.txt.insert(END, f"\nFood Oil          {self.food_oil.get()}           {self.food_oil.get() * 180}")
        if self.daal.get() != 0:
            self.txt.insert(END, f"\nDaal              {self.daal.get()}           {self.daal.get() * 80}")
        if self.rice.get() != 0:
            self.txt.insert(END, f"\nRice              {self.rice.get()}           {self.rice.get() * 80}")
        if self.sugar.get() != 0:
            self.txt.insert(END, f"\nSugar             {self.sugar.get()}           {self.sugar.get() * 170}")
        if self.maaza.get() != 0:
            self.txt.insert(END, f"\nMaaza              {self.maaza.get()}           {self.maaza.get() * 20}")
        if self.sprite.get() != 0:
            self.txt.insert(END, f"\nSprite            {self.sprite.get()}           {self.sprite.get() * 50}")
        if self.coke.get() != 0:
            self.txt.insert(END, f"\nCoke              {self.coke.get()}           {self.coke.get() * 60}")
        if self.oats.get() != 0:
            self.txt.insert(END, f"\nOats             {self.oats.get()}           {self.oats.get() * 20}")
        if self.biscuits.get() != 0:
            self.txt.insert(END, f"\nBiscuits          {self.biscuits.get()}           {self.biscuits.get() * 20}")
        self.txt.insert(END, "\n===================================")
        self.txt.insert(END,
                        f"\n              Total : Rs. {self.total_cosmetics_prices + self.total_grocery_prices + self.total_other_prices + self.total_cosmetics_prices * 0.05 + self.total_grocery_prices * 0.05 + self.total_other_prices * 0.05}")
        ########################################################################################################
        verify = self.verifier
        verify()
        #######################################          ###################################
        cname = self.cus_name.get()
        cnum = self.c_phone.get()
        cbill = self.c_bill_no.get()
        dtime = self.DateofOrder.get()

        soap = self.bath_soap.get()
        cream = self.face_cream.get()
        wash = self.face_wash.get()
        spray = self.hair_spray.get()
        lotion = self.body_lotion.get()
        rice1 = self.rice.get()
        oil = self.food_oil.get()
        dal = self.daal.get()
        wheat1 = self.wheat.get()
        sugar1 = self.sugar.get()
        maaza1 = self.maaza.get()
        coke1 = self.coke.get()
        sprite1 = self.sprite.get()
        oats1 = self.oats.get()
        bis = self.biscuits.get()

        to_cos = self.total_cosmetics.get()
        to_gro = self.total_grocery.get()
        to_oth = self.total_other.get()
        tax_cos = self.tax_cos.get()
        tax_gro = self.tax_groc.get()
        tax_oth = self.tax_other.get()
        totall=self.total_cosmetics_prices+self.total_grocery_prices+self.total_other_prices+ self.total_cosmetics_prices * 0.05 + self.total_grocery_prices * 0.05 + self.total_other_prices * 0.05

        conn = sqlite3.connect("Grocery_aalll.db")
        with conn:
            cursor = conn.cursor()
        cursor.execute('CREATE TABLE IF NOT EXISTS Grocery_aalll (Name TEXT,Number TEXT,Bill TEXT,Time TEXT,Soap TEXT,Cream TEXT,Wash TEXT,Spray TEXT,Lotion TEXT,Rice TEXT,Oil TEXT,Dal TEXT,Wheat TEXT,Sugar TEXT,Maaza TEXT,Coke TEXT,Sprite TEXT,Oats TEXT,Biscuits TEXT,To_cos TEXT,To_gro TEXT,To_oth TEXT,tax_cos TEXT,tax_gro TEXT,tax_oth TEXT,Total TEXT)')
        cursor.execute('INSERT INTO Grocery_aalll(Name,Number,Bill,Time,Soap,Cream,Wash,Spray,Lotion,Rice,Oil,Dal,Wheat,Sugar,Maaza,Coke,Sprite,Oats,Biscuits,To_cos,To_gro,To_oth,tax_cos,tax_gro,tax_oth,Total) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', (cname, cnum, cbill, dtime, soap, cream, wash, spray, lotion, rice1, oil, dal, wheat1, sugar1, maaza1, coke1, sprite1, oats1, bis, to_cos, to_gro, to_oth, tax_cos, tax_gro, tax_oth, totall))
        conn.commit()
        if self.cus_name.get():
            messagebox.showinfo("Thank you", "Visit Again!!")

        '''Notif = Notify()
        notification = ("Your total bill is: " + str(totall))
        Notif.send(notification)'''

    # Function to exit
    def exit(self):
        self.root.destroy()

############################################ Verifying User Details ##############################################################
    def verifier(self):
        a = c = 0
        if not self.cus_name.get():
            print(messagebox.showerror("Error","Customer name & number is required"))
            a = 1
        if not self.c_bill_no.get():
            print(messagebox.showerror("Error","Bill number not exist"))
            c = 1
        if a == 1 or c == 1:
            return 1
        else:
            return 0

root = Tk()
object = Bill_App(root)
root.mainloop()



